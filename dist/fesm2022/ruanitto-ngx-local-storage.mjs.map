{"version":3,"file":"ruanitto-ngx-local-storage.mjs","sources":["../../src/local-storage.config.interface.ts","../../src/local-storage.module.ts","../../src/local-storage.service.ts","../../src/ruanitto-ngx-local-storage.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\nimport { INotifyOptions } from \"./notify-options.interface\";\n\nexport const LOCAL_STORAGE_SERVICE_CONFIG = new InjectionToken<string>(\n  \"LOCAL_STORAGE_SERVICE_CONFIG\"\n);\n\nexport interface ILocalStorageServiceConfig {\n  // Properties:\n  notifyOptions?: INotifyOptions;\n  /**\n   * Prefix for storage item\n   */\n  prefix?: string;\n  storageType?: \"sessionStorage\" | \"localStorage\";\n  /**\n   * Encrypt data\n   */\n  encrypt?: boolean;\n  /**\n   * If encrypt data, key must be set\n   */\n  encryptKey?: string;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ILocalStorageServiceConfig, LOCAL_STORAGE_SERVICE_CONFIG } from './local-storage.config.interface';\n\n@NgModule()\nexport class LocalStorageModule {\n    static forRoot (userConfig: ILocalStorageServiceConfig = {}): ModuleWithProviders<LocalStorageModule> {\n        return {\n            ngModule: LocalStorageModule,\n            providers: [\n                { provide: LOCAL_STORAGE_SERVICE_CONFIG, useValue: userConfig }\n            ]\n        }\n    }\n}\n","import { Inject, Injectable, Optional } from \"@angular/core\";\nimport CryptoJS from \"crypto-js\";\nimport { Observable, Subscriber } from \"rxjs\";\nimport { share } from \"rxjs/operators\";\nimport { ILocalStorageEvent } from \"./local-storage-events.interface\";\nimport {\n  ILocalStorageServiceConfig,\n  LOCAL_STORAGE_SERVICE_CONFIG,\n} from \"./local-storage.config.interface\";\nimport { INotifyOptions } from \"./notify-options.interface\";\n\nconst DEPRECATED: string = \"This function is deprecated.\";\nconst LOCAL_STORAGE_NOT_SUPPORTED: string = \"LOCAL_STORAGE_NOT_SUPPORTED\";\nconst ENCRYPT_KET_NOT_SET: string =\n  \"To use this function encryptKey must be set!\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LocalStorageService {\n  public isSupported: boolean = false;\n\n  public errors$: Observable<string>;\n  public removeItems$: Observable<ILocalStorageEvent>;\n  public setItems$: Observable<ILocalStorageEvent>;\n  public warnings$: Observable<string>;\n\n  private notifyOptions: INotifyOptions = {\n    setItem: false,\n    removeItem: false,\n  };\n  private prefix: string = \"ls\";\n  private storageType: \"sessionStorage\" | \"localStorage\" = \"localStorage\";\n  private webStorage: Storage;\n\n  private encryptData: boolean = false;\n  private key: string = \"\";\n\n  private errors: Subscriber<string> = new Subscriber<string>();\n  private removeItems: Subscriber<ILocalStorageEvent> =\n    new Subscriber<ILocalStorageEvent>();\n  private setItems: Subscriber<ILocalStorageEvent> =\n    new Subscriber<ILocalStorageEvent>();\n  private warnings: Subscriber<string> = new Subscriber<string>();\n\n  constructor(\n    @Optional()\n    @Inject(LOCAL_STORAGE_SERVICE_CONFIG)\n    config: ILocalStorageServiceConfig = {}\n  ) {\n    let { notifyOptions, prefix, storageType, encrypt, encryptKey } = config;\n\n    if (notifyOptions != null) {\n      let { setItem, removeItem } = notifyOptions;\n      this.setNotify(!!setItem, !!removeItem);\n    }\n\n    if (encrypt) {\n      if (!encryptKey) {\n        console.warn(ENCRYPT_KET_NOT_SET);\n      } else {\n        this.setEncryptKey(encryptKey);\n      }\n    }\n\n    if (prefix != null) {\n      this.setPrefix(prefix);\n    }\n\n    if (storageType != null) {\n      this.setStorageType(storageType);\n    }\n\n    this.errors$ = new Observable<string>(\n      (observer: Subscriber<string>) => (this.errors = observer)\n    ).pipe(share());\n\n    this.removeItems$ = new Observable<ILocalStorageEvent>(\n      (observer: Subscriber<ILocalStorageEvent>) =>\n        (this.removeItems = observer)\n    ).pipe(share());\n\n    this.setItems$ = new Observable<ILocalStorageEvent>(\n      (observer: Subscriber<ILocalStorageEvent>) => (this.setItems = observer)\n    ).pipe(share());\n\n    this.warnings$ = new Observable<string>(\n      (observer: Subscriber<string>) => (this.warnings = observer)\n    ).pipe(share());\n\n    this.isSupported = this.checkSupport();\n  }\n\n  public add(key: string, value: any): boolean {\n    if (console && console.warn) {\n      console.warn(DEPRECATED);\n      console.warn(\"Use `LocalStorageService.set` instead.\");\n    }\n\n    return this.set(key, value);\n  }\n\n  public clearAll(regularExpression?: string): boolean {\n    // Setting both regular expressions independently\n    // Empty strings result in catchall RegExp\n    let prefixRegex = !!this.prefix\n      ? new RegExp(\"^\" + this.prefix)\n      : new RegExp(\"\");\n\n    let testRegex = !!regularExpression\n      ? new RegExp(regularExpression)\n      : new RegExp(\"\");\n\n    if (!this.isSupported) {\n      this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n      return false;\n    }\n\n    let prefixLength = this.prefix.length;\n\n    for (let key in this.webStorage) {\n      // Only remove items that are for this app and match the regular expression\n      if (prefixRegex.test(key) && testRegex.test(key.substr(prefixLength))) {\n        try {\n          this.remove(key.substr(prefixLength));\n        } catch (e) {\n          this.errors.next(e.message);\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public deriveKey(key: string): string {\n    return `${this.prefix}${key}`;\n  }\n\n  public get<T>(key: string): T {\n    if (!this.isSupported) {\n      this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n\n      return null;\n    }\n\n    let item = this.webStorage\n      ? this.webStorage.getItem(this.deriveKey(key))\n      : null;\n\n    // FIXME: not a perfect solution, since a valid 'null' string can't be stored\n    if (!item || item === \"null\") {\n      return null;\n    }\n\n    try {\n      if (this.encryptData) {\n        item = this.decrypt(item);\n      }\n\n      return JSON.parse(item);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public getStorageType(): string {\n    return this.storageType;\n  }\n\n  public keys(): Array<string> {\n    if (!this.isSupported) {\n      this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n\n      return [];\n    }\n\n    let prefixLength = this.prefix.length;\n    let keys: Array<string> = [];\n    for (let key in this.webStorage) {\n      // Only return keys that are for this app\n      if (key.substr(0, prefixLength) === this.prefix) {\n        try {\n          keys.push(key.substr(prefixLength));\n        } catch (e) {\n          this.errors.next(e.message);\n\n          return [];\n        }\n      }\n    }\n\n    return keys;\n  }\n\n  public length(): number {\n    let count = 0;\n    let storage = this.webStorage;\n    for (let i = 0; i < storage.length; i++) {\n      if (storage.key(i).indexOf(this.prefix) === 0) {\n        count += 1;\n      }\n    }\n\n    return count;\n  }\n\n  public remove(...keys: Array<string>): boolean {\n    let result = true;\n\n    keys.forEach((key: string) => {\n      if (!this.isSupported) {\n        this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n        result = false;\n      }\n\n      try {\n        this.webStorage.removeItem(this.deriveKey(key));\n        if (this.notifyOptions.removeItem) {\n          this.removeItems.next({\n            key: key,\n            storageType: this.storageType,\n          });\n        }\n      } catch (e) {\n        this.errors.next(e.message);\n        result = false;\n      }\n    });\n\n    return result;\n  }\n\n  public set(key: string, value: any): boolean {\n    // Let's convert `undefined` values to `null` to get the value consistent\n    if (value === undefined) {\n      value = null;\n    } else {\n      value = JSON.stringify(value);\n\n      if (this.encryptData) {\n        value = this.encrypt(value);\n      }\n    }\n\n    if (!this.isSupported) {\n      this.warnings.next(LOCAL_STORAGE_NOT_SUPPORTED);\n\n      return false;\n    }\n\n    try {\n      if (this.webStorage) {\n        this.webStorage.setItem(this.deriveKey(key), value);\n      }\n\n      if (this.notifyOptions.setItem) {\n        this.setItems.next({\n          key: key,\n          newvalue: value,\n          storageType: this.storageType,\n        });\n      }\n    } catch (e) {\n      this.errors.next(e.message);\n\n      return false;\n    }\n\n    return true;\n  }\n\n  private checkSupport(): boolean {\n    try {\n      let supported =\n        this.storageType in window && window[this.storageType] !== null;\n\n      if (supported) {\n        this.webStorage = window[this.storageType];\n\n        // When Safari (OS X or iOS) is in private browsing mode, it\n        // appears as though localStorage is available, but trying to\n        // call .setItem throws an exception.\n        //\n        // \"QUOTA_EXCEEDED_ERR: DOM Exception 22: An attempt was made\n        // to add something to storage that exceeded the quota.\"\n        let key = this.deriveKey(`__${Math.round(Math.random() * 1e7)}`);\n        this.webStorage.setItem(key, \"\");\n        this.webStorage.removeItem(key);\n      }\n\n      return supported;\n    } catch (e) {\n      this.errors.next(e.message);\n\n      return false;\n    }\n  }\n\n  private setEncryptKey(key: string) {\n    this.encryptData = true;\n\n    this.key = key;\n  }\n\n  private setPrefix(prefix: string): void {\n    this.prefix = prefix;\n\n    // If there is a prefix set in the config let's use that with an appended\n    // period for readability:\n    const PERIOD: string = \".\";\n\n    if (this.prefix && !this.prefix.endsWith(PERIOD)) {\n      this.prefix = !!this.prefix ? `${this.prefix}${PERIOD}` : \"\";\n    }\n  }\n\n  public setStorageType(storageType: \"sessionStorage\" | \"localStorage\"): void {\n    this.storageType = storageType;\n  }\n\n  private setNotify(setItem: boolean, removeItem: boolean): void {\n    if (setItem != null) {\n      this.notifyOptions.setItem = setItem;\n    }\n\n    if (removeItem != null) {\n      this.notifyOptions.removeItem = removeItem;\n    }\n  }\n\n  private encrypt(txt: string): string {\n    return CryptoJS.AES.encrypt(txt, this.key).toString();\n  }\n\n  private decrypt(txtToDecrypt: string) {\n    return CryptoJS.AES.decrypt(txtToDecrypt, this.key).toString(\n      CryptoJS.enc.Utf8\n    );\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}